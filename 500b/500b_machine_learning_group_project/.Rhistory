barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
print(paste("SUMMARY FOR:",x_name),"\n")
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim <- function(x,x_name,ylim){
#plot data
barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
print(paste("SUMMARY FOR:",x_name))
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
print("\n")
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim(shoppers.data$ProductRelated,"ProductRelated",c(0,0.05))
summarize_dim <- function(x,x_name,ylim){
#plot data
barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
print(paste("SUMMARY FOR:",x_name))
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
print("")
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim(shoppers.data$ProductRelated,"ProductRelated",c(0,0.05))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,1))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,0.1))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,0.06))
parent(x)
length(shoppers.data$Informational_Duration)
length(unique(shoppers.data$Informational_Duration))
length((shoppers.data$Informational_Duration))
summarize_dim <- function(x,x_name,ylim){
#plot data
barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
#unique_vals to n ratio
x_to_n = length(unique(x)) / length(x)
print(paste("SUMMARY FOR:",x_name))
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
print(paste("Unique values to sample size:",x_to_n))
print("")
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim(shoppers.data$ProductRelated,"ProductRelated",c(0,0.05))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,0.06))
plot(shoppers.data$Informational_Duration)
plot(shoppers.data$Informational_Duration)
plot(shoppers.data$ProductRelated)
plot(shoppers.data$ProductRelated)
summarize_dim(shoppers.data$VisitorType)
summarize_dim(shoppers.data$VisitorType,"Visitor Type",c(0,1))
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
summarize_dim(shoppers.data$TrafficType,"Traffic Type",c(0,1))
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
#plot data
barplot(
prop.table(
table(shoppers.data$TrafficType)
)
,main=paste("Barplot of Traffic Type")
,ylim = c(0,1)
)
print("Mode for traffic type:")
print(mode(shoppers.data$TrafficType))
mode(c(1,2,3,3))
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
#plot data
barplot(
prop.table(
table(shoppers.data$TrafficType)
)
,main=paste("Barplot of Traffic Type")
,ylim = c(0,1)
)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
print("Mode for traffic type:")
print(Mode(shoppers.data$TrafficType))
head(shoppers.data)
rows(shoppers.data)
shoppers.data[1,]
print(head(shoppers.data))
shoppers.data.columns
shoppers.data.cols
columns(shoppers.data)
cols(shopers.data)
names(shoppers.data)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
shoppers.data$BounceRates
var(shoppers.data$BounceRates)
var(shoppers.data$ExitRates)
cov(shoppers.data$BounceRates,shoppers.data$ExitRates,method=c("pearson"))
cov(c(1,1,1,1,1,1),c(1,1,1,1,1,1))
shoppers.data$Administrative_Duration
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
ExitRates
)
print(head(shoppers.data,n = 10))
print(tail(shoppers.data,n = 10))
knitr::opts_chunk$set(echo = TRUE)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
ExitRates
)
print(head(shoppers.data,n = 10))
print(tail(shoppers.data,n = 10))
#transformation 1: we will be using revenue for logistic regression, so we can transform this variable to a numeric binary.
shoppers.data$Revenue[shoppers.data$Revenue=="True"]  = as.numeric(1)
shoppers.data$Revenue[shoppers.data$Revenue=="False"] = as.numeric(0)
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
#interpolate Informational_duration with zero when Information is zero.
#do the same for ProductRelated.
shoppers.data$Informational_Duration[shoppers.data$Informational==0] = 0
shoppers.data$ProductRelated_Duration[shoppers.data$ProductRelated==0] = 0
#exclude the rows with null values
shoppers.data = subset(shoppers.data,!is.na(shoppers.data$Informational))
#exclude "other" visitors
shoppers.data = subset(shoppers.data,shoppers.data$VisitorType != "Other")
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
summarize_dim <- function(x,x_name,ylim){
#plot data
barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
#unique_vals to n ratio
x_to_n = length(unique(x)) / length(x)
print(paste("SUMMARY FOR:",x_name))
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
print(paste("Unique values to sample size:",x_to_n))
print("")
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim(shoppers.data$ProductRelated,"ProductRelated",c(0,0.05))
#remove Informational
shoppers.data <- subset(shoppers.data,select = -c(Informational))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,0.06))
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
#plot data
barplot(
prop.table(
table(shoppers.data$TrafficType)
)
,main=paste("Barplot of Traffic Type")
,ylim = c(0,1)
)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
print("Mode for traffic type:")
print(Mode(shoppers.data$TrafficType))
summarize_dim(shoppers.data$BounceRates)
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(1,0))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,1))
knitr::opts_chunk$set(echo = TRUE)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
ExitRates,
pageValue
)
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
ExitRates,
PageValue
)
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
ExitRates,
PageValues
)
print(head(shoppers.data,n = 10))
print(tail(shoppers.data,n = 10))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,0.4))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,0.5))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,0.5))
summarize_dim(shoppers.data$PageValues,"page values",c(0,1))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,0.5))
summarize_dim(shoppers.data$PageValues,"page values",c(0,0.01))
shoppers.data$PageValues
is.na(shoppers.data$PageValues)
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
PageValues
)
print(head(shoppers.data,n = 10))
print(tail(shoppers.data,n = 10))
plot(shoppers.data$PageValues)
#transformation 1: we will be using revenue for logistic regression, so we can transform this variable to a numeric binary.
shoppers.data$Revenue[shoppers.data$Revenue=="True"]  = as.numeric(1)
shoppers.data$Revenue[shoppers.data$Revenue=="False"] = as.numeric(0)
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
#interpolate Informational_duration with zero when Information is zero.
#do the same for ProductRelated.
shoppers.data$Informational_Duration[shoppers.data$Informational==0] = 0
shoppers.data$ProductRelated_Duration[shoppers.data$ProductRelated==0] = 0
#exclude the rows with null values
shoppers.data = subset(shoppers.data,!is.na(shoppers.data$Informational))
#exclude "other" visitors
shoppers.data = subset(shoppers.data,shoppers.data$VisitorType != "Other")
#exclude null page values
shoppers.data = subset(shoppers.data,is.na(shoppers.data$PageValues))
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
knitr::opts_chunk$set(echo = TRUE)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
#Inspect which fields are missing values with amelia,
#Subset our data down to the relevant fields with dplyr
library(Amelia)
library(dplyr)
#dimension reduction
shoppers.data <- select(
shoppers.data,
Month,
Informational,
Informational_Duration,
ProductRelated,
ProductRelated_Duration,
Revenue,
VisitorType,
TrafficType,
BounceRates,
PageValues
)
print(head(shoppers.data,n = 10))
print(tail(shoppers.data,n = 10))
#transformation 1: we will be using revenue for logistic regression, so we can transform this variable to a numeric binary.
shoppers.data$Revenue[shoppers.data$Revenue=="True"]  = as.numeric(1)
shoppers.data$Revenue[shoppers.data$Revenue=="False"] = as.numeric(0)
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
#interpolate Informational_duration with zero when Information is zero.
#do the same for ProductRelated.
shoppers.data$Informational_Duration[shoppers.data$Informational==0] = 0
shoppers.data$ProductRelated_Duration[shoppers.data$ProductRelated==0] = 0
#exclude the rows with null values
shoppers.data = subset(shoppers.data,!is.na(shoppers.data$Informational))
#exclude "other" visitors
shoppers.data = subset(shoppers.data,shoppers.data$VisitorType != "Other")
#exclude null page values
shoppers.data = subset(shoppers.data,!is.na(shoppers.data$PageValues))
#print the number of missing variables in each field.
print(sapply(shoppers.data,function(x) sum(is.na(x))))
summarize_dim <- function(x,x_name,ylim){
#plot data
barplot(
prop.table(
table(x)
)
,main=paste("Barplot of ",x_name)
,ylim = ylim
)
#unique_vals to n ratio
x_to_n = length(unique(x)) / length(x)
print(paste("SUMMARY FOR:",x_name))
print(paste("Mean:",mean(x)))
print(paste("Variance:",var(x)))
print(paste("Std Dev:",sd(x)))
print(paste("Unique values to sample size:",x_to_n))
print("")
}
summarize_dim(shoppers.data$Informational,"Informational",c(0,1))
summarize_dim(shoppers.data$ProductRelated,"ProductRelated",c(0,0.05))
#remove Informational
shoppers.data <- subset(shoppers.data,select = -c(Informational))
#visualize Informational_Duration and ProductRelated_Duration
summarize_dim(shoppers.data$Informational_Duration,"Informational Duration",c(0,1))
summarize_dim(shoppers.data$ProductRelated_Duration,"ProductRelated Duration",c(0,0.06))
#plot data
barplot(
prop.table(
table(shoppers.data$VisitorType)
)
,main=paste("Barplot of Visitor Type")
,ylim = c(0,1)
)
#plot data
barplot(
prop.table(
table(shoppers.data$TrafficType)
)
,main=paste("Barplot of Traffic Type")
,ylim = c(0,1)
)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
print("Mode for traffic type:")
print(Mode(shoppers.data$TrafficType))
summarize_dim(shoppers.data$BounceRates,"bounce rates",c(0,0.5))
summarize_dim(shoppers.data$PageValues,"page values",c(0,0.01))
cov(shoppers.data)
var(shoppers.data)
print(head(shoppers.data))
plot(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration, main="ProductRelated vs ProductRelated_Duration",
xlab="Product Related", ylab="Product Related Duration", pch=19)
plot(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration, main="ProductRelated vs ProductRelated_Duration",
xlab="Product Related", ylab="Product Related Duration", pch=19)
print(cor(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration))
library(ggplot2)
ggplot(data,aes(shoppers.data$ProductRelated, shoppers.data$ProductRelated_Duration)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
library(ggplot2)
ggplot(shoppers.data,aes(shoppers.data$ProductRelated, shoppers.data$ProductRelated_Duration)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
library(ggplot2)
ggplot(shoppers.data,aes(ProductRelated,ProductRelated_Duration)) +
geom_point()+
geom_smooth(method=lm)
library(ggplot2)
ggplot(shoppers.data,aes(ProductRelated,ProductRelated_Duration)) +
geom_point()+
geom_smooth(method=lm)
print(corr(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration))
library(ggplot2)
ggplot(shoppers.data,aes(ProductRelated,ProductRelated_Duration)) +
geom_point()+
geom_smooth(method=lm)
print(cor(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration))
cov(x=shoppers.data$ProductRelated_Duration,y=shoppers.data$ProductRelated)
library(ggplot2)
ggplot(shoppers.data,aes(ProductRelated,ProductRelated_Duration,color=Revenue)) +
geom_point()+
geom_smooth(method=lm)
print(cor(shoppers.data$ProductRelated,shoppers.data$ProductRelated_Duration))
ggplot(shoppers.data,aes(VisitorType,TrafficType,color=Revenue))
ggplot(shoppers.data,aes(VisitorType,TrafficType))
ggplot(shoppers.data,aes(TrafficType))
plot(shoppers.data,aes(TrafficType))
cor(shoppers.data$TrafficType,shoppers.data$VisitorType)
shoppers.data$TrafficType
shoppers.data$VisitorType
