print("hello world")
exit
exit()
end()
data <- read.csv('data.csv',header=TRUE,sep=',')
#linear model
model <- lm(Y ~ X, data = data)
#linear model
model <- lm(Y ~ X, data = data)
summary(model)
attach(data)
plot(X,Y,col=rgb(0.2,0.4,0.6,0.4),main = "LinReg")
abline(model,col='red')
double(10)
X<- cbind(1,matrix(x))
titanic.data <- read.csv('train.csv')
View(titanic.data)
#check for missing values and how many unique values there are
sapply(titaniv.data,function(x) sum (is.na(x)))
#check for missing values and how many unique values there are
sapply(titanic.data,function(x) sum (is.na(x)))
sapply(titanic.data,function(x) length(unique(x)))
#plot missing values using the Amelia package
library(Amelia)
installed.packages("Amelia")
"xtable" %in% rownames(installed.packages())
"Amelia" %in% rownames(installed.packages())
#plot missing values using the Amelia package
if ("Amelia" %in% rownames(installed.packages())==FALSE){
install.packages("Amelia")
}
library("Amelia")
library("Amelia")
missmap(titanic.data,main="Missing values vs obsvered")
#interpolate missing age values with the mean age
#the na.rm indicates that we remove null values in mean calculation.
titanic.data$Age[is.na(titanic.data$Age)] <- mean(titanic.data$Age,na.rm = T)
#subset to relevant variables.
titanic.data <- subset(titanic.data,select=c(2,3,5,6,7,8,10,12))
#creating the train and test dataset
train <- titanic.data[1:800]
#creating the train and test dataset
train <- titanic.data[1:800,]
test  <- titanic.data[801:891,]
#training. we use family=binomial to indicate one of two outcomes.
model <- glm(Survived ~. , family=binomial(link="logit"),data=train)
summary(model)
#performance evaluation
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
#define survival as 1 or 0 from logit function
fitted.results<- ifelse(fitted.results > 0.5, 1, 0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
#visualization
if ("ROCR" %in% rownames(installed.packages())==FALSE){
install.packages("ROCR")
}
library(ROCR)
#visualization
if ("ROCR" %in% rownames(installed.packages())==FALSE){
install.packages("ROCR")
}
library(ROCR)
p<-predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type="response")
pr<-prediction(p,test$Survived)
prf<-performance(pr,measure="tpr",x.measure="fpr")
plot(prf)
auc<-performance(pr,measure="auc")
#visualization
if ("ROCR" %in% rownames(installed.packages())==FALSE){
install.packages("ROCR")
}
library(ROCR)
p<-predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type="response")
pr<-prediction(p,test$Survived)
prf<-performance(pr,measure="tpr",x.measure="fpr")
plot(prf)
auc<-performance(pr,measure="auc")
print(auc@y.values[[1]]>auc)
install.packages("cluster")
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
pga <- read.csv('lpga2008.csv')
library(cluster)
pga <- read.csv('lpga2008.csv')
knitr::opts_chunk$set(echo = TRUE)
#load dataset
library(cluster)
pga <- read.csv('lpga2008.csv')
#build clusters with the agnes function
pga_clusters <- agnes(pga,method="complete")
plot(pga_clusters)
knitr::opts_chunk$set(echo = TRUE)
#load dataset
library(cluster)
pga <- read.csv('lpga2008.csv')
#build clusters with the agnes function (agglomerative)
pga_clusters <- agnes(pga,method="complete")
plot(pga_clusters)
#divisive clustering with the diana function
#load dataset
library(cluster)
pga <- read.csv('lpga2008.csv')
#build clusters with the agnes function (agglomerative)
pga_clusters <- agnes(pga,method="complete")
plot(pga_clusters,main="Dendrogram of Agnes: Aglomerative clustering of pga")
#divisive clustering with the diana function
pga_div_clusters <- diana(pga)
pltree(pga_div, cex = 0.6, hang = -1, main = "Dendrogram of diana: Divisive clustering of pga")
#load dataset
library(cluster)
pga <- read.csv('lpga2008.csv')
#build clusters with the agnes function (agglomerative)
pga_clusters <- agnes(pga,method="complete")
plot(pga_clusters,main="Dendrogram of Agnes: Aglomerative clustering of pga")
#divisive clustering with the diana function
pga_div_clusters <- diana(pga)
pltree(pga_div_clusters, cex = 0.6, hang = -1, main = "Dendrogram of diana: Divisive clustering of pga")
knitr::opts_chunk$set(echo = TRUE)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
head(shoppers.data)
#pull csv data and overview
shoppers.data <- read.csv("online_shoppers_intention.csv")
print(as.data.frame(head(shoppers.data)))
View(model)
View(train)
clear
rm()
rm(list=all())
rm(list=ls())
cls
getwd()
setwd("C:/users/filipp/documents/501-foundations_of_ds/capstone")
setwd("C:/users/filipp/documents/501-foundations_of_ds/capstone")
setwd("C:/users/filipp/documents/501foundations_of_ds/capstone")
setwd("C:/users/filipp/documents/501_foundations_of_ds/capstone")
setwd("501_foundations_of_ds/capstone")
dir
dir()
setwd("C:/users/filipp/documents/usd_data_sci/501_foundations_of_ds/capstone")
